(window.webpackJsonp=window.webpackJsonp||[]).push([[112],{487:function(t,e,a){"use strict";a.r(e);var v=a(44),r=Object(v.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"vue"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue"}},[t._v("#")]),t._v(" Vue")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"vue-生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-生命周期"}},[t._v("#")]),t._v(" Vue 生命周期")]),t._v(" "),a("ul",[a("li",[t._v("beforeCreate() Vue 实例挂载元素 $el 和数据对象 data 都为 undefined")]),t._v(" "),a("li",[t._v("created() 实例的数据对象 methods 有了  但还没 $el")]),t._v(" "),a("li",[t._v("beforeMount() $el 和 data 都初始化了 为虚拟的dom节点 还未挂载实例"),a("br"),t._v("\n不能直接操作页面的dom和获取dom对象  data.message 还未替换")]),t._v(" "),a("li",[t._v("mounted() Vue 实例挂载完成 data.message 成功渲染")]),t._v(" "),a("li",[t._v("beforeUpdate()  data 变化时触发 页面中数据还是旧的 还没有同步最新数据")]),t._v(" "),a("li",[t._v("updated() data 变化时触发 最新的数据")]),t._v(" "),a("li",[t._v("beforeDestoryed() 这个时候上所有的data和 methods、指令、过滤器 ……都是处于可用状态。还没有真正被销毁")]),t._v(" "),a("li",[t._v("destoryed() 这个时候上所有的data和methods、指令、过滤器 ……都是处于不可用状态。组件已经被销毁")])]),t._v(" "),a("h3",{attrs:{id:"v-if-v-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-show"}},[t._v("#")]),t._v(" v-if  v-show")]),t._v(" "),a("ul",[a("li",[t._v("v-if 销毁 创建的过程")]),t._v(" "),a("li",[t._v("v-show 一直都存在  控制 display 显隠   频繁切换可用")])]),t._v(" "),a("h3",{attrs:{id:"v-for-中的-key"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-for-中的-key"}},[t._v("#")]),t._v(" v-for 中的 key")]),t._v(" "),a("ul",[a("li",[t._v("为每一个节点设置唯一的标识，主要是为了更高效的更新dom")])]),t._v(" "),a("h3",{attrs:{id:"v-if-和-v-for-一起使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if-和-v-for-一起使用"}},[t._v("#")]),t._v(" v-if 和 v-for 一起使用")]),t._v(" "),a("ul",[a("li",[t._v("v-for 比 v-if 优先级高，这意味着 v-if 将重复运行在每个 v-for 循环中")])]),t._v(" "),a("h3",{attrs:{id:"transition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#transition"}},[t._v("#")]),t._v(" transition")]),t._v(" "),a("ul",[a("li",[t._v("给元素或组件添加进入和离开的过渡")]),t._v(" "),a("li",[t._v("有个基本的 class"),a("br"),t._v("\nv-enter 定义进入过渡的开始状态，在元素被插入之前生效，在元素被插入的下一帧移除\nv-enter-active  定义进入过渡生效时的状态"),a("br"),t._v("\nv-enter-to 结束状态，在元素被插入的下一帧生效，同时v-enter 被移除\nv-leave 离开过渡的开始状态\nv-leave-active 离开过渡生效时的状态\nv-leave-to 离开过渡的结束状态")]),t._v(" "),a("li",[t._v("钩子函数"),a("br"),t._v("\nbefore-enter  enter after-enter enter-cancelled before-leave leave after-leave leave-cancelled")]),t._v(" "),a("li",[t._v("duration 设置过渡时间\n"),a("transition",{attrs:{duration:{enter:500,leave:800}}},[t._v("...")])],1),t._v(" "),a("li",[t._v("CSS 动画用法同 CSS 过渡，区别是在动画中 v-enter 类名在节点插入 DOM 后不会立即删除，"),a("br"),t._v("\n而是在 animationend 事件触发时删除。")]),t._v(" "),a("li",[t._v("在同时使用过渡和css动画的时候 可以设置type属性来制定vue内部机制监听transitioned"),a("br"),t._v("\n或者animationed事件来完成过渡还是动画的监听")]),t._v(" "),a("li",[t._v("过渡模式  in-out  out-in")])]),t._v(" "),a("h3",{attrs:{id:"vue-路由模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-路由模式"}},[t._v("#")]),t._v(" Vue 路由模式")]),t._v(" "),a("ul",[a("li",[t._v('hash 在浏览器中的符号"#"，以及#后面的字符，window.location.hash 获取'),a("br"),t._v("\n但不会被包括在 HTTP 请求中，对后端完全没有影响，因此改变 hash 不会重新加载页面。")]),t._v(" "),a("li",[t._v("history pushState() replaceState() 可以对浏览器的历史记录栈进行修改，"),a("br"),t._v("\n前端的URL 必须跟向后端发送请求的URL 一致，否则会404")])]),t._v(" "),a("blockquote",[a("p",[t._v("需要后台配置")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// nginx")]),t._v("\nlocation "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  try_files $uri $uri"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// node js express")]),t._v("\nconnect"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("history"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("api"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("fallback\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"前端性能优化方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端性能优化方法"}},[t._v("#")]),t._v(" 前端性能优化方法")]),t._v(" "),a("ul",[a("li",[t._v("减少需要传输的文件大小，压缩文件")]),t._v(" "),a("li",[t._v("编码时减少不必要的样式代码")]),t._v(" "),a("li",[t._v("减少不必要的请求")]),t._v(" "),a("li",[t._v("浏览器缓存技术")]),t._v(" "),a("li",[t._v("html引入的js文件，放在标签后面加载")]),t._v(" "),a("li",[t._v("页面懒加载")])]),t._v(" "),a("h3",{attrs:{id:"vue-首页白屏问题解决"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-首页白屏问题解决"}},[t._v("#")]),t._v(" Vue 首页白屏问题解决")]),t._v(" "),a("ul",[a("li",[t._v("路由懒加载")]),t._v(" "),a("li",[t._v("vue-cli 使用插件（compression-webpack-plugin）开启gzip压缩，后台配合gzip访问")]),t._v(" "),a("li",[t._v("进行cdn加速")]),t._v(" "),a("li",[t._v("开启vue服务渲染模式 安装prerender-spa-plugin插件 在webpack中配置")]),t._v(" "),a("li",[t._v("在生产环境中删除不必要的 console.log")]),t._v(" "),a("li",[t._v("nginx gzip 压缩")]),t._v(" "),a("li",[t._v("增加 loading")])]),t._v(" "),a("h3",{attrs:{id:"v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[t._v("#")]),t._v(" v-model")]),t._v(" "),a("ul",[a("li",[t._v("v-bind")]),t._v(" "),a("li",[t._v("v-on 绑定 input 事件")])]),t._v(" "),a("h3",{attrs:{id:"computed-watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#computed-watch"}},[t._v("#")]),t._v(" computed  watch")]),t._v(" "),a("ul",[a("li",[t._v("computed 不在data中定义，响应式变化，描述的是一个值依赖另一个值"),a("br"),t._v("\nmethods 调用才有效")]),t._v(" "),a("li",[t._v("watch 监听 data 中定义的值，允许异步操作")])]),t._v(" "),a("h3",{attrs:{id:"nexttick"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nexttick"}},[t._v("#")]),t._v(" $nextTick")]),t._v(" "),a("h3",{attrs:{id:"router-route"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#router-route"}},[t._v("#")]),t._v(" router  route")]),t._v(" "),a("ul",[a("li",[t._v("router 示例对象 push go")]),t._v(" "),a("li",[t._v("route 当前的路由信息 path query params")])]),t._v(" "),a("h3",{attrs:{id:"beforemount-mounted-实例-el-挂载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#beforemount-mounted-实例-el-挂载"}},[t._v("#")]),t._v(" beforeMount() mounted() 实例 $el 挂载")]),t._v(" "),a("ul",[a("li",[t._v("在 beformount 阶段，是通过 { { msg } } 进行占位的，因为此时还有挂在到页面上，"),a("br"),t._v("\n还是JavaScript中的虚拟DOM形式存在的，在mounted之后可以看到div中的内容发生了变化")]),t._v(" "),a("li",[t._v("beformount：虚拟dom创建完成")]),t._v(" "),a("li",[t._v("mounted：渲染出真实dom，组件已经出现在页面中，数据，事件，都DOM都处理好了")])]),t._v(" "),a("h3",{attrs:{id:"diff"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff"}},[t._v("#")]),t._v(" diff")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000008782928",target:"_blank",rel:"noopener noreferrer"}},[t._v("链接"),a("OutboundLink")],1)]),t._v(" "),a("ul",[a("li",[t._v("设置key和不设置key的区别"),a("br"),t._v("\n不设key，newCh和oldCh只会进行头尾两端的相互比较，设key后，除了头尾两端的比较外，"),a("br"),t._v("\n还会从用key生成的对象oldKeyToIdx中查找匹配的节点，所以为节点设置key可以更高效的利用dom。")]),t._v(" "),a("li",[t._v("引入虚拟dom的概念，由于渲染真实的dom比较消耗性能，在改变真实dom之前先比较相应的虚拟dom，如果有改变"),a("br"),t._v("\n才去更新对应的真实dom。比较只会在同级进行。")]),t._v(" "),a("li",[t._v("有时手动优化dom的效率会比使用虚拟dom高，但是对于页面结构比较大，结构比较复杂的dom时，手动优化会消耗大量的时间"),a("br"),t._v("\n且维护性不高。")])])])}),[],!1,null,null,null);e.default=r.exports}}]);