(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{480:function(a,t,e){"use strict";e.r(t);var r=e(44),n=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h1",{attrs:{id:"data-是函数的原因"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-是函数的原因"}},[a._v("#")]),a._v(" data 是函数的原因")]),a._v(" "),e("h2",{attrs:{id:"为什么组件中的-data-必须是一个函数-然后-return-一个对象-而-new-vue-实例里-data-可以直接是一个对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#为什么组件中的-data-必须是一个函数-然后-return-一个对象-而-new-vue-实例里-data-可以直接是一个对象"}},[a._v("#")]),a._v(" 为什么组件中的 data 必须是一个函数，然后 return 一个对象，而 new Vue 实例里，data 可以直接是一个对象？")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("组件大多用来复用，且 JS 里对象时应用关系，如果组件中data是一个对象，那么作用域没有隔离，子组件中的data的值会\n互相影响")])]),a._v(" "),e("li",[e("p",[a._v("如果data是函数，那么每个实例可以维护一份被返回对象的独立的拷贝，组件实例之间 data 不会相互影响")])]),a._v(" "),e("li",[e("p",[a._v("new Vue 的实例，是不会被复用的，因此不存在这个问题")])])])])}),[],!1,null,null,null);t.default=n.exports}}]);