(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{485:function(e,a,v){"use strict";v.r(a);var t=v(44),i=Object(t.a)({},(function(){var e=this,a=e.$createElement,v=e._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"keep-alive"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive"}},[e._v("#")]),e._v(" keep-alive")]),e._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/LGKVWXxm4ICI4FTbIK5dOQ",target:"_blank",rel:"noopener noreferrer"}},[e._v("keep-alive的理解"),v("OutboundLink")],1)])]),e._v(" "),v("h2",{attrs:{id:"概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[e._v("#")]),e._v(" 概念")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("会缓存不活动的组件实例，而不是销毁它们，主要用于保留组件状态或避免重新渲染")])]),e._v(" "),v("li",[v("p",[e._v("它自身不会渲染一个 DOM 元素，也不会出现在组件的父组件链中")])]),e._v(" "),v("li",[v("p",[e._v("keep-alive 是用在其一个直属的子组件被开关的情形。如果你在其中有 v-for 则不会工作")])]),e._v(" "),v("li",[v("p",[e._v("如果有上述的多个条件性的子元素，keep-alive 要求同时只有一个子元素被渲染")])]),e._v(" "),v("li",[v("p",[e._v("include 和 exclude 属性允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个数组来表示")])]),e._v(" "),v("li",[v("p",[e._v("匹配首先检查组件自身的 name 选项，如果 name 选项不可用，\n则匹配它的局部注册名称 (父组件 components 选项的键值)。匿名组件不能被匹配")])]),e._v(" "),v("li",[v("p",[e._v("max 最多可以缓存多少组件实例。一旦这个数字达到了，在新实例被创建之前，\n已缓存组件中最久没有被访问的实例会被销毁掉。")])]),e._v(" "),v("li",[v("p",[e._v("设置 keep-alive 的组件会多出两个生命周期钩子，activated 和 deactivated，再次\n进入 keep-alive 组件，生命周期 beforeCreate created beforeMount mounted 不会执行")])])]),e._v(" "),v("h2",{attrs:{id:"缓存后如何获取数据"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#缓存后如何获取数据"}},[e._v("#")]),e._v(" 缓存后如何获取数据")]),e._v(" "),v("ul",[v("li",[v("p",[e._v("beforeRouteEnter 路由适用")])]),e._v(" "),v("li",[v("p",[e._v("activated 在keep-alive缓存的组件被激活的时候，都会执行 activated 钩子")])])]),e._v(" "),v("blockquote",[v("p",[e._v("注意：服务端渲染时 activated 不被调用")])]),e._v(" "),v("h2",{attrs:{id:"keep-alive的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#keep-alive的理解"}},[e._v("#")]),e._v(" keep-alive的理解")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("keep-alive")]),e._v(" 包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们。自身不会渲染一个DOM元素，也不会出现在父组件链中")])]),e._v(" "),v("li",[v("p",[e._v("当组件在 keep-alive 内被切换时，它的 "),v("code",[e._v("activated")]),e._v(" 和 "),v("code",[e._v("deactivated")]),e._v(" 这两个生命周期函数将会被执行")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("include")]),e._v(" 和 "),v("code",[e._v("exclude")]),e._v(" 属性允许组件有条件的缓存，可用逗号分隔符，正则表达式，数组标识；匹配首先检查组件自身的name选项，如果name选项不可用，则匹配它的局部注册名称(父组件components选项的键值)。匿名组件不能被匹配")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("max")]),e._v(" 最多可以缓存多少组件实例。一旦这个数字达到了，在新实例创建之前，已缓存组件中最久没有被访问的实例会被销毁掉")])])])])}),[],!1,null,null,null);a.default=i.exports}}]);